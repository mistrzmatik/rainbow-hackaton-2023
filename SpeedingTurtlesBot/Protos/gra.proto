syntax = "proto3";
option go_package = "github.com/slaraz/turniej/gra_go/proto";
option csharp_namespace = "SpeedingTurtlesBot";

service Gra {
    // tworzy mecz
    // zwraca ID gry
    rpc NowyMecz(KonfiguracjaGry) returns (NowaGraInfo) {}

    // dołącza do nowej gry
    rpc DolaczDoGry(Dolaczanie) returns (StanGry) {}

    // ruch gracza klienta
    rpc MojRuch(RuchGracza) returns (StanGry) {}
}

message KonfiguracjaGry {
    int32 liczbaGraczy = 1;
    string graID = 2;
}

message NowaGraInfo {
    string graID = 1;
}

message Dolaczanie {
    string graID = 1;
    string nazwaGracza = 2;
}

message StanGry {
    string graID = 1;
    string graczID = 2;
    KolorZolwia twojKolor = 3;
    repeated Karta twojeKarty = 4;
    repeated Pole plansza = 5;
    bool CzyKoniec = 6;
    int32 KtoWygral = 7;
    string nazwaZwyciezcy = 8;
    repeated ZagranaKarta zagraneKarty = 9;
}

message ZagranaKarta {
    int32 numerGracza = 1;
    Karta karta = 2;
}

message Pole {
    repeated KolorZolwia zolwie = 2;
}

enum KolorZolwia {
    XXX = 0;
    RED = 1;
    GREEN = 2;
    BLUE = 3;
    YELLOW = 4;
    PURPLE = 5;
}

message RuchGracza {
    string graID = 1;
    string graczID = 2;
    Karta zagranaKarta = 3;
    KolorZolwia kolorWybrany = 4;
}

enum Karta {
    XX = 0; // piersza karta z opakowania tali, nie używana w grze
    R1 = 1; // czerwony jeden do przodu
    R2 = 2; // czerwony dwa do przodu
    R1B = 3; //czerwony jeden do tyłu
    G1 = 4; // zielony
    G2 = 5;
    G1B = 6;
    B1 = 7; // niebieski
    B2 = 8;
    B1B = 9;
    Y1 = 10; // żółty
    Y2 = 11;
    Y1B = 12;
    P1 = 13; // fioletowy
    P2 = 14;
    P1B = 15;
    L1 = 16; // ostatni
    L2 = 17;
    A1 = 18; // dowolny
    A1B = 19;
}